<launch>
  <arg name="world" default="$(find differential_drive_robot_gazebo)/worlds/obstacle.world"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find differential_drive_robot_description)/urdf/differential_drive_robot.xacro"/>

  <arg name="rvizconfig" default="$(find differential_drive_robot_description)/rviz/urdf.rviz" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <node name="map_server" pkg="map_server" type="map_server" args="$(find differential_drive_robot_description)/map/may_map.yaml"/>

  <!-- Rviz visualisation node -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <!-- Joint state publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"></node>
  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>
  <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="differential_drive_robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model differential_drive_robot" />

  <!-- Move base -->
  <include file="$(find navigation)/launch/move_base.launch"/>

  <!-- Simple Goal -->
  <include file="$(find simple_navigation_goals)/launch/movebase_seq.launch"/>


</launch>
